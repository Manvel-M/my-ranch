---
import type { HTMLAttributes } from "astro/types";
import Star from "@/assets/icons/star.svg";
import clsx from "clsx";

type Props = HTMLAttributes<"div"> & {
  review: {
    abrev: string;
    name: string;
    review: string;
    platform: string;
    link: string;
    icon: ((_props: astroHTML.JSX.SVGAttributes) => any) & ImageMetadata;
  };
  className?: string;
};

const { review, className, ...props } = Astro.props;
---

<div
  class={clsx(
    `flex-none flex flex-col gap-2 bg-surface-light p-5 rounded-md shadow-md`,
    className,
  )}
  {...props}
>
  <div class="flex flex-row justify-between w-full">
    <div class="flex flex-row justify-between w-full">
      <div
        class="size-9 bg-accent text-accent-foreground flex justify-center items-center rounded-full"
      >
        {review.abrev}
      </div>
      <div>
        <review.icon class="size-6" />
      </div>
    </div>
  </div>
  <div class="flex flex-row justify-between w-full">
    <div>
      {review.name}
    </div>

    <div class="text-xs">
      <div class="flex flex-row">
        {
          Array.from({ length: 5 }).map((_, i) => (
            <Star class="size-4 fill-yellow-400" />
          ))
        }
      </div>
    </div>
  </div>

  <div class="w-full h-[1px] bg-border-light"></div>

  <div class="w-full text-sm">
    <p class="line-clamp-3">{review.review}</p>
  </div>

  <div class="w-full text-right">
    <a href={review.link} class="text-sm font-semibold"
      >Read More <span class="sr-only">Continue reading review</span></a
    >
  </div>
</div>
